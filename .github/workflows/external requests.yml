name: external requests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # download the repository
    - name: Download repository
      uses: actions/checkout@v2
      
    # Start and configure apache-php docker container
    - name: Start Apache-PHP docker container
      run: |
        echo -e "\n[APACHE-PHP] Start on port 80 (internal 80), name apache-php-api, put folder api in /var/www/html"
        docker run -d -p 80:80 --name apache-php-api -v "$PWD/www/html":/var/www/html php:7.4-apache
        
        echo -e "\n\n[APACHE-PHP] Copy api files to the container"
        docker cp "$PWD/www/html/." apache-php-api:/var/www/html

        echo -e "\n\n[APACHE-PHP] Create credentials file"
        docker exec -i apache-php-api /bin/bash -c 'cd /var/www;mkdir credentials;echo -e "DB_HOST=mysql-server\nDB_USER100=root\nDB_PASS100=test" > credentials/credentials.ini'
        
        echo -e "\n\n[APACHE-PHP] Add line to set ServerName (removes warning)"
        docker exec -i apache-php-api /bin/bash -c 'echo "ServerName localhost" >> /etc/apache2/apache2.conf'
    
    # Install mysqli for PHP and restart apache accepting non 0 exit-code (container stops with code 129)
    - name: Install mysqli for PHP and restart apache
      run: |
        echo -e "\n\n[APACHE-PHP] Install mysqli and restart apache"
        docker exec -i apache-php-api /bin/bash -c 'docker-php-ext-install mysqli;apachectl restart'
      continue-on-error: true

    # Set the correct permissions for the html folder
    - name: Set permissions for the html folder
      run: |
        echo -e "\n\n[APACHE-PHP] Set html permissions"
        docker exec -i apache-php-api /bin/bash -c 'cd /var/www/html;chmod -R 755 .'

    # Start MySQL docker container
    - name: Start MySQL docker container
      run: |
        echo -e "\n[MYSQL] Create folder for the volume"
        sudo mkdir -p /storage/docker/mysql-datadir
        echo -e "\n\n[MYSQL] Start MySQL container, port 3306 (internal 3306), name mysql-server, volume, root password: test"
        docker run -d -p 3306:3306 --name mysql-server --volume=/storage/docker/mysql-datadir:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=test mysql:8.0.20
        echo -e "\n\n[MYSQL] Import database"
        docker exec -i mysql-server /bin/bash -c "mysql -h 127.0.0.1 -P 3306 -u root -p test --protocol=tcp" < db100_100.sql
    
    # Set up the network between the containers
    - name: Set up share network
      run: |
        echo -e "\n[NETWORK] Create the network"
        docker network create sharedNet
        echo -e "\n\n[NETWORK] Connect apache-php container to the network"
        docker network connect sharedNet apache-php-api
        echo -e "\n\n[NETWORK] Connect mysql-server container to the network"
        docker network connect sharedNet mysql-server
        echo -e "\n\n[NETWORK] Try to ping between containers"
        docker exec -i apache-php-api /bin/bash -c 'apt-get update && apt-get install -y net-tools iputils-ping'
        docker exec -i apache-php-api ping -c 4 mysql-server

    # Install Python
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    # Execute python test
    - name: Execute Python Test
      run: |
        pip install requests==2.18.4
        python tests/test.py